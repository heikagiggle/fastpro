// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator kysely {
  provider     = "prisma-kysely"
  output       = "../src/db"
  fileName     = "db.types.ts"
  enumFileName = "db.enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model role {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.VarChar
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  name        String
  permissions Json      @db.Json
  user        user[]
}

model user {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.VarChar
  role       role     @relation(fields: [role_id], references: [id])
  role_id    String
  created_at DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  profile    profile?
}

model profile {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.VarChar
  first_name    String?
  last_name     String?
  phone         String?
  email         String    @unique
  profile_image String?
  dob           DateTime?
  user          user      @relation(fields: [user_id], references: [id])
  user_id       String    @unique
  created_at    DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
}
